{
  "openapi": "3.0.0",
  "info": {
    "title": "Products API",
    "description": " RESTful API in Node.js Offbeat",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost/",
      "description": ""
    }
  ],
  "paths": {
    "/list/{tableName}": {
      "get": {
        "summary": "Return all Items with list.",
        "description": ".",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset Number of Records using LIMIT i,X in SQL",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit Number of Records using LIMIT X,i in SQL",
            "required": false,
            "type": "integer",
            "default": 5,
            "minimum": 5,
            "maximum": 1000
          },
          {
            "name": "name",
            "in": "query",
            "description": "e.g. name=eq:Top in Japan , Available conditions code mappings lte='<=' lt='<' gt='>' gte='>=' eq='=' neq='!=' between='BETWEEN' notbetween='NOT BETWEEN' null='IS NULL' notnull='IS NOT NULL' contains='%_%' starts='_%' ends='%_'",
            "required": false,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parentId",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "remarks",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "html",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdAt",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "example between:2022-09-08,2022-09-09  Use comma to separate two values "
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/List"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get/{tableName}/{id}": {
      "get": {
        "summary": "Return a record",
        "description": "",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A record from database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Record"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{tableName}": {
      "post": {
        "summary": "Create a Record",
        "description": "Example Category ",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "category",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "body",
            "description": "name of the category",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentId",
            "in": "body",
            "description": "The Parent CategoryId ",
            "required": false,
            "type": "integer"
          },
          {
            "name": "remarks",
            "in": "body",
            "description": "Free Text remarks",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A record from database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/listPromotions": {
      "get": {
        "summary": "List Promotions",
        "description": "List Promotions in tree like structure  ",
        "parameters": [],
        "responses": {
          "200": {
            "description": "A list of promotions details in tree like structure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Top Cosmetics"
                    },
                    "subCategoryCount": {
                      "type": "integer",
                      "example": 1
                    },
                    "children": {
                      "type": "array",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        },
                        "name": {
                          "type": "string",
                          "example": "Top in Japan"
                        }
                      },
                      "example":[{"id":2,"name":"Top in Japan"}]
                    }
                  }
                },
                "properties": {
                  "id": {
                    "type": "interger",
                    "example": "1"
                  },
                  "name": {
                    "type": "string",
                    "example": "Top Cosmetics"
                  },
                  "subCategoryCount": {
                    "type": "interger",
                    "example": 3
                  },
                  "children": {
                    "type": "array",
                    "example": [
                      {
                        "id": {
                          "type": "string",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Apple Pie "
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "List": {
        "properties": {
          "tableName": {
            "type": "string",
            "format": "int64",
            "example": "category"
          },
          "name": {
            "type": "string",
            "format": "int64",
            "example": "eq:Top in Japan"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "example": ""
          },
          "remarks": {
            "type": "string",
            "format": "int64",
            "example": "contains:Top"
          }
        },
        "required": [
          "tableName",
          "name"
        ]
      },
      "Category": {
        "properties": {
          "tableName": {
            "type": "string",
            "format": "int64",
            "example": "category"
          },
          "name": {
            "type": "string",
            "format": "int64",
            "example": "Top in Japan"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64",
            "example": "1"
          },
          "remarks": {
            "type": "string",
            "format": "int64",
            "example": "SubCategory of Cosmetics"
          }
        },
        "required": [
          "tableName",
          "name"
        ]
      },
      "Record": {
        "properties": {
          "tableName": {
            "type": "string",
            "format": "",
            "example": "category"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          }
        },
        "required": [
          "id",
          "tableName"
        ]
      },
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "Jimmy"
          },
          "email": {
            "type": "string",
            "example": "test@test.com"
          }
        },
        "required": [
          "id",
          "username",
          "email"
        ]
      }
    }
  }
}